{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\Women-in-Technology-master\\\\Women-in-Technology-master\\\\website\\\\src\\\\components\\\\CarouselCards\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useRef, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport control from \"../../images/others/control.png\";\nimport \"./CarouselCards.css\";\nimport Card from \"../Card/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CarouselCards({\n  cards,\n  name\n}) {\n  _s();\n\n  const containerRef = useRef(null);\n  const [containerDimensions, setContainerDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  useEffect(() => {\n    function handleResize() {\n      setContainerDimensions({\n        width: containerRef.current.clientWidth,\n        height: containerRef.current.clientHeight\n      });\n    }\n\n    if (containerRef === null || containerRef === void 0 ? void 0 : containerRef.current) {\n      handleResize();\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  const cardsOnSlide = Math.floor(containerDimensions.width / 280) > 2 ? 2 : Math.floor(containerDimensions.width / 280) || 1;\n  const cardsBySlides = useMemo(() => cards.reduce((acc, card, i) => {\n    const idx = Math.floor(i / cardsOnSlide);\n\n    if (acc[idx]) {\n      acc[idx].push(card);\n    } else {\n      acc[idx] = [card];\n    }\n\n    return acc;\n  }, []), [cards, cardsOnSlide]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: name,\n    className: \"carousel slide carousel-multi-item\",\n    \"data-bs-ride\": \"carousel\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-carousel\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"btn-floating control-btn control-btn--left\",\n        href: `#${name}`,\n        \"data-bs-slide\": \"prev\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: control,\n          alt: \"carousel control left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"btn-floating control-btn control-btn--right\",\n        href: `#${name}`,\n        \"data-bs-slide\": \"next\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: control,\n          alt: \"carousel control left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carousel-inner\",\n        role: \"listbox\",\n        ref: containerRef,\n        children: cardsBySlides.map((cardsSlide, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `carousel-item ${i === 0 ? \"active\" : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row justify-content-center\",\n            style: {\n              flexWrap: \"nowrap\"\n            },\n            children: cardsSlide.map(({\n              image,\n              title,\n              description,\n              link,\n              alt\n            }, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col rounded border border-dark m-3 py-4\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                image: image,\n                title: title // description={description}\n                ,\n                link: link,\n                alt: alt,\n                idx: `${i}-${j}`,\n                className: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 23\n              }, this)\n            }, `${title}-${j}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, `carousel-item-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CarouselCards, \"QrQFNYaEaqAd6oe6wg1UPS+ZzgM=\");\n\n_c = CarouselCards;\nCarouselCards.propTypes = {\n  cards: PropTypes.arrayOf(PropTypes.shape({\n    image: PropTypes.node.isRequired,\n    title: PropTypes.string.isRequired,\n    alt: PropTypes.string,\n\n    /*changed description prop to not required since description props\n    is not passed */\n    description: PropTypes.string,\n    link: PropTypes.string.isRequired\n  })),\n  name: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CarouselCards\");","map":{"version":3,"sources":["C:/Users/dell/Desktop/Women-in-Technology-master/Women-in-Technology-master/website/src/components/CarouselCards/index.js"],"names":["React","useMemo","useRef","useState","useEffect","PropTypes","control","Card","CarouselCards","cards","name","containerRef","containerDimensions","setContainerDimensions","width","height","handleResize","current","clientWidth","clientHeight","window","addEventListener","removeEventListener","cardsOnSlide","Math","floor","cardsBySlides","reduce","acc","card","i","idx","push","map","cardsSlide","flexWrap","image","title","description","link","alt","j","propTypes","arrayOf","shape","node","isRequired","string"],"mappings":"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","sourcesContent":["import React, { useMemo, useRef, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport control from \"../../images/others/control.png\";\nimport \"./CarouselCards.css\";\nimport Card from \"../Card/index\";\n\nexport default function CarouselCards({ cards, name }) {\n  const containerRef = useRef(null);\n  const [containerDimensions, setContainerDimensions] = useState({\n    width: 0,\n    height: 0,\n  });\n\n  useEffect(() => {\n    function handleResize() {\n      setContainerDimensions({\n        width: containerRef.current.clientWidth,\n        height: containerRef.current.clientHeight,\n      });\n    }\n\n    if (containerRef?.current) {\n      handleResize();\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const cardsOnSlide =\n    Math.floor(containerDimensions.width / 280) > 2\n      ? 2\n      : Math.floor(containerDimensions.width / 280) || 1;\n\n  const cardsBySlides = useMemo(\n    () =>\n      cards.reduce((acc, card, i) => {\n        const idx = Math.floor(i / cardsOnSlide);\n        if (acc[idx]) {\n          acc[idx].push(card);\n        } else {\n          acc[idx] = [card];\n        }\n        return acc;\n      }, []),\n    [cards, cardsOnSlide]\n  );\n\n  return (\n    <div\n      id={name}\n      className=\"carousel slide carousel-multi-item\"\n      data-bs-ride=\"carousel\"\n    >\n      <div className=\"container-carousel\">\n        <a\n          className=\"btn-floating control-btn control-btn--left\"\n          href={`#${name}`}\n          data-bs-slide=\"prev\"\n        >\n          <img src={control} alt=\"carousel control left\" />\n        </a>\n        <a\n          className=\"btn-floating control-btn control-btn--right\"\n          href={`#${name}`}\n          data-bs-slide=\"next\"\n        >\n          <img src={control} alt=\"carousel control left\" />\n        </a>\n        <div className=\"carousel-inner\" role=\"listbox\" ref={containerRef}>\n          {cardsBySlides.map((cardsSlide, i) => (\n            <div\n              key={`carousel-item-${i}`}\n              className={`carousel-item ${i === 0 ? \"active\" : \"\"}`}\n            >\n              <div\n                className=\"row justify-content-center\"\n                style={{ flexWrap: \"nowrap\" }}\n              >\n                {cardsSlide.map(\n                  ({ image, title, description, link, alt }, j) => (\n                    <div key={`${title}-${j}`} className=\"col rounded border border-dark m-3 py-4\">\n                      <Card\n                        image={image}\n                        title={title}\n                        // description={description}\n                        link={link}\n                        alt={alt}\n                        idx={`${i}-${j}`}\n                        className=\"\"\n                        \n                      />\n                    </div>\n                  )\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nCarouselCards.propTypes = {\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.node.isRequired,\n      title: PropTypes.string.isRequired,\n      alt: PropTypes.string,\n      /*changed description prop to not required since description props\n      is not passed */\n      description: PropTypes.string,\n      link: PropTypes.string.isRequired,\n    })\n  ),\n  name: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}